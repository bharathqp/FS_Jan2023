keywords 	==> case insensitive
			 use semicolon at the end of the query
CRUD		 
		



DESCRIBE <table name>;
	-- Get info/ schema of table



SELECT ==> Reads the table
		-- SELECT <column name>, <column name> FROM <table>;

	   ==> Filter
		-- SELECT <column name>, <column name> FROM <table> WHERE <column name> <condition> ;

		=> Equality   						= , >=, <=, <, > 
		=> Not Equality	    				<>						, !=
		=> Range							between
		=> In 								multiple values
		=> Contains   						LIKE %keyword%
		=> Starts With   					LIKE keyword%
		=> Ends With   						LIKE %keyword
		=> to combine All the filters		AND	
		=> to combine Any of the filters	OR	
		=> Sort items 						ORDER BY <column name> ASC   DESC


INSERT INTO Personal_info VALUES
		('5', "Virat" ,'sad', 'asdsa'),
		('6', "Sanjay" ,'sad', 'asdsa'),
		('7', "Ranbeer" ,'sad', 'asdsa');


UPDATE
	UPDATE <table_name>
	SET <column> = <value>,
		<column> = <value>,
		<column> = <value>,
		<column> = <value>
	 WHERE <condition>



	UPDATE Personal_info
	SET Last_Name = "Khan",
	    First_Name = "Amir",
		City = "Delhi"
	 WHERE id=3 LIMIT 1;



	UPDATE Personal_info
	SET City = "Delhi";


	UPDATE Personal_info
	SET id=2
	 WHERE First_Name = "Saurav";


CRUD


DELETE FROM Personal_info WHERE First_Name <> "Saurav";

INSERT INTO 

CREATE DATABASE
CREATE TABLE
					CREATE TABLE Personal_info (
					Id int, 
					First_Name varchar(255),
					Last_Name varchar(255),
					City	 varchar(255));













ALTER
DROP
INDEX
JOINS
CONSTRAINTS

countrylanguage


create table product(
					Id int, 
					product varchar(255),
					price   int);


create table customer(
					Id int, 
					name varchar(255),
					email varchar(255));




INSERT INTO product VALUES
		('1', "TV" , 40000),
		('2', "Phone" , 50000),
		('3', "Watch" , 20000);



INSERT INTO customer VALUES
		('1', "Asif" , 'asif@gmail.com'),
		('2', "Aron" , 'aron@gmail.com'),
		('3', "Anirudh" , 'anirudh@gmail.com');




create table dummy( Id int  NOT NULL DEFAULT 10,  
                       name varchar(255) NOT NULL,
                       email varchar(255));



INSERT INTO dummy (id, name)  VALUES (null, "testing name");


ALTER TABLE dummy ALTER email SET DEFAULT 'dummy@dummy.com';

ALTER TABLE dummy ALTER id DROP DEFAULT;


create table dummy( Id int  NOT NULL DEFAULT 1,  
	name varchar(255) NOT NULL,
	email varchar(255)  NOT NULL,
	UNIQUE (Id),
	UNIQUE (email)

	CHECK (Age > 18));


INSERT INTO dummy VALUES ('1', "Bhim" , 'Bhim@gmail.com', 'Rao');
INSERT INTO dummy VALUES ('2', "Ram" , 'Ram@gmail.com', 'Rao');
INSERT INTO dummy VALUES ('3', "Shyam" , 'Shyam@gmail.com', 'Rao');
INSERT INTO dummy VALUES ('4', "Bhim" , 'Bhim2@gmail.com', 'Seth');

INSERT INTO dummy VALUES ('5', "Shyam" , 'Shyam2@gmail.com', 'Rao');


,
INSERT INTO dummy VALUES  ('3', "Brod" , 'brod2@gmail.com');

INSERT INTO dummy VALUES  ('4', "Bhim" , 'Bhim2@gmail.com', 'Seth');




create table dummy( Id int  NOT NULL DEFAULT 1,  
	name varchar(255) NOT NULL,
	email varchar(255)  NOT NULL,
	Last_Name varchar(255)  NOT NULL,
	UNIQUE (Id),
	UNIQUE (email),
	CONSTRAINT full_name UNIQUE (name, Last_Name),
	CONSTRAINT india_voter CHECK (age > 21 AND 
	                              Counry='Srilanka'));



ALTER TABLE dummy DROP PRIMARY KEY;




INSERT INTO dummy VALUES  ('5', "Mojit" , 'Mojit@gmail.com', 'Seth', 19);



PRIMARY KEY
FOREIGN KEY





create table dummy( Id int  NOT NULL DEFAULT 1,  
	name varchar(255) NOT NULL,
	email varchar(255)  NOT NULL,
	PRIMARY KEY (Id));







create table customers(Id int  NOT NULL DEFAULT 1,  
	name varchar(255) NOT NULL,
	email varchar(255)  NOT NULL,
	PRIMARY KEY (Id));




create table orders(
    Id int  NOT NULL DEFAULT 1,  
	cust int NOT NULL,
	price int NOT NULL,
	PRIMARY KEY (Id),
	FOREIGN KEY (cust) 	REFERENCES	customers(id) ON DELETE CASCADE);




INSERT INTO orders VALUES(1, 1, 2300);


INSERT INTO fb_user VALUES(1, "Ranveer", "Ranveer@gmail.com");
INSERT INTO fb_user VALUES(2, "Ranbeer", "Ranbeer@gmail.com");

 




create table fb_user(Id int  NOT NULL DEFAULT 1,  
	name varchar(255) NOT NULL,
	email varchar(255)  NOT NULL,
	PRIMARY KEY (Id));




create table fb_posts(
    Id int  NOT NULL DEFAULT 1,  
	fb_user int NOT NULL,
	post varchar(255),
	PRIMARY KEY (Id),
	FOREIGN KEY (fb_user) REFERENCES fb_user(id) ON DELETE CASCADE);



INSERT INTO fb_posts VALUES(Id:1, cist:1, post:"image", status:'active');
INSERT INTO fb_posts VALUES(2, 2, "video");
INSERT INTO fb_posts VALUES(3, 1, "text");
INSERT INTO fb_posts VALUES(4, 2, "audio");


SELECT * from <table1> AS t1
join <table2> on t1.key = t2.key
join <table3> on t1.key = t3.key
join <table4> on t1.key = t4.key
join <table5> on t1.key = t5.key
where


INSERT INTO orders (name, age) values (SELECT name, age FROM cousomers)

CREATE TABLE table2 as SELECT name, age FROM cousomers;